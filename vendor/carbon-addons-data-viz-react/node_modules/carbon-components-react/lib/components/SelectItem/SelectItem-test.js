'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _SelectItem = require('../SelectItem');

var _SelectItem2 = _interopRequireDefault(_SelectItem);

var _enzyme = require('enzyme');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('SelectItem', function () {
  describe('Renders as expected', function () {
    var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_SelectItem2.default, { className: 'extra-class', value: 'test', text: 'test' }));

    it('Has the expected classes', function () {
      expect(wrapper.hasClass('bx--select-option')).toEqual(true);
    });

    it('Should add extra classes that are passed via className', function () {
      expect(wrapper.hasClass('extra-class')).toEqual(true);
    });

    it('Should add the value that is passed', function () {
      wrapper.setProps({ value: 'placeholder-item' });
      expect(wrapper.props().value).toEqual('placeholder-item');
    });

    it('Should add the select item text that is passed', function () {
      wrapper.setProps({ text: 'Pick an option' });
      expect(wrapper.props().children).toEqual('Pick an option');
    });

    it('Should not be disabled by default', function () {
      expect(wrapper.props().disabled).toEqual(false);
    });

    it('should set disabled as expected', function () {
      expect(wrapper.props().disabled).toEqual(false);
      wrapper.setProps({ disabled: true });
      expect(wrapper.props().disabled).toEqual(true);
    });

    it('should set hidden as expected', function () {
      expect(wrapper.props().hidden).toEqual(false);
      wrapper.setProps({ hidden: true });
      expect(wrapper.props().hidden).toEqual(true);
    });
  });
});