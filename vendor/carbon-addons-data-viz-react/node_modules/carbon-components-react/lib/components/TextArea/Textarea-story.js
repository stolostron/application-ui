'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _react3 = require('@storybook/react');

var _addonActions = require('@storybook/addon-actions');

var _TextArea = require('../TextArea');

var _TextArea2 = _interopRequireDefault(_TextArea);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextAreaProps = {
  labelText: 'Text Area label',
  className: 'some-class',
  onChange: (0, _addonActions.action)('onChange'),
  onClick: (0, _addonActions.action)('onClick'),
  placeholder: 'Placeholder text.',
  id: 'test2',
  cols: 50,
  rows: 4
};

(0, _react3.storiesOf)('TextArea', module).addWithInfo('enabled', '\n      Text areas enable the user to interact with and input data. A text area is used when you\n      anticipate the user to input more than 1 sentence. The example belows shows an enabled\n      Text Area component.\n    ', function () {
  return _react2.default.createElement(_TextArea2.default, TextAreaProps);
}).addWithInfo('disabled', '\n      Text areas enable the user to interact with and input data. A text area is used when you\n      anticipate the user to input more than 1 sentence. The example belows shows an disabled\n      Text Area component.\n    ', function () {
  return _react2.default.createElement(_TextArea2.default, _extends({ disabled: true }, TextAreaProps, { placeholder: 'Disabled' }));
});