function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import warning from 'warning';
import Link from '../Link';
var didWarnAboutDeprecation = false;
export var OrderSummary =
/*#__PURE__*/
function (_Component) {
  _inherits(OrderSummary, _Component);

  function OrderSummary(props) {
    var _this;

    _classCallCheck(this, OrderSummary);

    _this = _possibleConstructorReturn(this, (OrderSummary.__proto__ || Object.getPrototypeOf(OrderSummary)).call(this, props));

    if (process.env.NODE_ENV !== "production") {
      process.env.NODE_ENV !== "production" ? warning(didWarnAboutDeprecation, 'Accessing the `OrderSummary` component from the ' + '`carbon-components-react` package is deprecated. Use the ' + '`carbon-addons-cloud-react` package instead.') : void 0;
      didWarnAboutDeprecation = true;
    }

    return _this;
  }

  _createClass(OrderSummary, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          children = _props.children,
          className = _props.className,
          other = _objectWithoutProperties(_props, ["children", "className"]);

      var classes = classNames('bx--order-summary', className);
      return React.createElement("div", _extends({
        className: classes
      }, other), children);
    }
  }]);

  return OrderSummary;
}(Component);
Object.defineProperty(OrderSummary, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: PropTypes.node,
    className: PropTypes.string
  }
});
export var OrderSummaryHeader =
/*#__PURE__*/
function (_Component2) {
  _inherits(OrderSummaryHeader, _Component2);

  function OrderSummaryHeader() {
    _classCallCheck(this, OrderSummaryHeader);

    return _possibleConstructorReturn(this, (OrderSummaryHeader.__proto__ || Object.getPrototypeOf(OrderSummaryHeader)).apply(this, arguments));
  }

  _createClass(OrderSummaryHeader, [{
    key: "render",
    value: function render() {
      var _props2 = this.props,
          children = _props2.children,
          className = _props2.className,
          _props2$id = _props2.id,
          id = _props2$id === void 0 ? this._sectionId = this._sectionId || "order__summary__header__id_".concat(Math.random().toString(36).substr(2)) : _props2$id,
          title = _props2.title,
          other = _objectWithoutProperties(_props2, ["children", "className", "id", "title"]);

      var classes = classNames('bx--order-header', className);
      return React.createElement("section", _extends({
        className: classes,
        "aria-labelledby": "".concat(id, "__title")
      }, other), React.createElement("p", {
        className: "bx--order-header-title",
        id: "".concat(id, "__title")
      }, title), children);
    }
  }]);

  return OrderSummaryHeader;
}(Component);
Object.defineProperty(OrderSummaryHeader, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: PropTypes.node,
    className: PropTypes.string,
    id: PropTypes.string,
    title: PropTypes.string
  }
});
Object.defineProperty(OrderSummaryHeader, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    title: 'Order Summary'
  }
});
export var OrderSummaryList =
/*#__PURE__*/
function (_Component3) {
  _inherits(OrderSummaryList, _Component3);

  function OrderSummaryList() {
    _classCallCheck(this, OrderSummaryList);

    return _possibleConstructorReturn(this, (OrderSummaryList.__proto__ || Object.getPrototypeOf(OrderSummaryList)).apply(this, arguments));
  }

  _createClass(OrderSummaryList, [{
    key: "render",
    value: function render() {
      var _props3 = this.props,
          children = _props3.children,
          className = _props3.className,
          other = _objectWithoutProperties(_props3, ["children", "className"]);

      var classes = classNames('bx--order-list', className);
      return React.createElement("ul", _extends({
        className: classes
      }, other), children);
    }
  }]);

  return OrderSummaryList;
}(Component);
Object.defineProperty(OrderSummaryList, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: PropTypes.node,
    className: PropTypes.string
  }
});
export var OrderSummaryCategory =
/*#__PURE__*/
function (_Component4) {
  _inherits(OrderSummaryCategory, _Component4);

  function OrderSummaryCategory() {
    _classCallCheck(this, OrderSummaryCategory);

    return _possibleConstructorReturn(this, (OrderSummaryCategory.__proto__ || Object.getPrototypeOf(OrderSummaryCategory)).apply(this, arguments));
  }

  _createClass(OrderSummaryCategory, [{
    key: "render",
    value: function render() {
      var _props4 = this.props,
          children = _props4.children,
          className = _props4.className,
          categoryText = _props4.categoryText,
          other = _objectWithoutProperties(_props4, ["children", "className", "categoryText"]);

      var classes = classNames('bx--order-category', className);
      return React.createElement("li", _extends({
        className: classes
      }, other), React.createElement("p", {
        className: "bx--order-category-title"
      }, categoryText), React.createElement("ul", null, children));
    }
  }]);

  return OrderSummaryCategory;
}(Component);
Object.defineProperty(OrderSummaryCategory, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: PropTypes.node,
    className: PropTypes.string,
    categoryText: PropTypes.string
  }
});
Object.defineProperty(OrderSummaryCategory, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    categoryText: 'Category Label'
  }
});
export var OrderSummaryListItem =
/*#__PURE__*/
function (_Component5) {
  _inherits(OrderSummaryListItem, _Component5);

  function OrderSummaryListItem() {
    _classCallCheck(this, OrderSummaryListItem);

    return _possibleConstructorReturn(this, (OrderSummaryListItem.__proto__ || Object.getPrototypeOf(OrderSummaryListItem)).apply(this, arguments));
  }

  _createClass(OrderSummaryListItem, [{
    key: "render",
    value: function render() {
      var _props5 = this.props,
          className = _props5.className,
          text = _props5.text,
          price = _props5.price,
          other = _objectWithoutProperties(_props5, ["className", "text", "price"]);

      var classes = classNames('bx--order-item', className);
      return React.createElement("li", _extends({
        className: classes
      }, other), React.createElement("p", {
        className: "bx--order-detail"
      }, text), React.createElement("p", {
        className: "bx--order-price"
      }, price));
    }
  }]);

  return OrderSummaryListItem;
}(Component);
Object.defineProperty(OrderSummaryListItem, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: PropTypes.string,
    text: PropTypes.string,
    price: PropTypes.string
  }
});
Object.defineProperty(OrderSummaryListItem, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    text: 'Detail 1',
    price: '--'
  }
});
export var OrderSummaryTotal =
/*#__PURE__*/
function (_Component6) {
  _inherits(OrderSummaryTotal, _Component6);

  function OrderSummaryTotal() {
    _classCallCheck(this, OrderSummaryTotal);

    return _possibleConstructorReturn(this, (OrderSummaryTotal.__proto__ || Object.getPrototypeOf(OrderSummaryTotal)).apply(this, arguments));
  }

  _createClass(OrderSummaryTotal, [{
    key: "render",
    value: function render() {
      var _props6 = this.props,
          children = _props6.children,
          className = _props6.className,
          _props6$id = _props6.id,
          id = _props6$id === void 0 ? "order__summary__total__id_".concat(Math.random().toString(36).substr(2)) : _props6$id,
          summaryText = _props6.summaryText,
          summaryPrice = _props6.summaryPrice,
          summaryDetails = _props6.summaryDetails,
          other = _objectWithoutProperties(_props6, ["children", "className", "id", "summaryText", "summaryPrice", "summaryDetails"]);

      var classes = classNames('bx--order-total-container', className);
      return React.createElement("section", _extends({
        className: classes,
        "aria-labelledby": "".concat(id, "__title")
      }, other), React.createElement("div", {
        className: "bx--order-total"
      }, React.createElement("p", {
        className: "bx--order-total-text",
        id: "".concat(id, "__title")
      }, summaryText), React.createElement("p", {
        className: "bx--order-total-price"
      }, summaryPrice, React.createElement("span", null, summaryDetails))), children);
    }
  }]);

  return OrderSummaryTotal;
}(Component);
Object.defineProperty(OrderSummaryTotal, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    children: PropTypes.node,
    className: PropTypes.string,
    id: PropTypes.string,
    summaryText: PropTypes.string,
    summaryPrice: PropTypes.string,
    summaryDetails: PropTypes.string
  }
});
Object.defineProperty(OrderSummaryTotal, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    summaryText: 'Total due now:',
    summaryPrice: '$0.00',
    summaryDetails: 'estimated'
  }
});
export var OrderSummaryFooter =
/*#__PURE__*/
function (_Component7) {
  _inherits(OrderSummaryFooter, _Component7);

  function OrderSummaryFooter() {
    _classCallCheck(this, OrderSummaryFooter);

    return _possibleConstructorReturn(this, (OrderSummaryFooter.__proto__ || Object.getPrototypeOf(OrderSummaryFooter)).apply(this, arguments));
  }

  _createClass(OrderSummaryFooter, [{
    key: "render",
    value: function render() {
      var _props7 = this.props,
          className = _props7.className,
          _props7$id = _props7.id,
          id = _props7$id === void 0 ? this._sectionId = this._sectionId || "order__summary__footer__id_".concat(Math.random().toString(36).substr(2)) : _props7$id,
          footerText = _props7.footerText,
          linkText = _props7.linkText,
          href = _props7.href,
          target = _props7.target,
          rel = _props7.rel,
          other = _objectWithoutProperties(_props7, ["className", "id", "footerText", "linkText", "href", "target", "rel"]);

      var classes = classNames('bx--order-footer', className);
      return React.createElement("section", _extends({
        className: classes,
        "aria-labelledby": "".concat(id, "__title")
      }, other), React.createElement("p", {
        className: "bx--order-footer-text",
        id: "".concat(id, "__title")
      }, footerText), "\xA0", React.createElement(Link, {
        href: href,
        target: target,
        rel: rel
      }, linkText));
    }
  }]);

  return OrderSummaryFooter;
}(Component);
Object.defineProperty(OrderSummaryFooter, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: PropTypes.string,
    id: PropTypes.string,
    linkText: PropTypes.string,
    href: PropTypes.string,
    target: PropTypes.string,
    rel: PropTypes.string
  }
});
Object.defineProperty(OrderSummaryFooter, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    footerText: 'Need Help?',
    linkText: 'Contact Bluemix Sales',
    href: '',
    target: '_blank',
    rel: 'noreferrer noopener'
  }
});