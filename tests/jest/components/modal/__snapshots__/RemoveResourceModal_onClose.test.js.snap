// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RemoveResourceModal test renders as expected without mocked data, to cover this.client onClose 1`] = `undefined`;

exports[`RemoveResourceModal test renders as expected without mocked data, to cover this.client onClose 2`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(RemoveResourceModal)
      data={
        Object {
          "__typename": "Application",
          "_uid": "local-cluster/42d4c013-52b9-11ea-bf05-00000a102d26",
          "clusterCount": 0,
          "created": "2019-12-11T01:24:02Z",
          "dashboard": null,
          "hubSubscriptions": Array [],
          "kind": "HCMApplication",
          "metadata": Object {
            "name": "samplebook-gbap",
            "namespace": "sample",
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
          },
          "name": "samplebook-gbap",
          "namespace": "sample",
          "podStatusCount": Object {},
          "remoteSubscriptionStatusCount": Object {},
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
      type="actionModal"
    >
      <RemoveResourceModal
        data={
          Object {
            "__typename": "Application",
            "_uid": "local-cluster/42d4c013-52b9-11ea-bf05-00000a102d26",
            "clusterCount": 0,
            "created": "2019-12-11T01:24:02Z",
            "dashboard": null,
            "hubSubscriptions": Array [],
            "kind": "HCMApplication",
            "metadata": Object {
              "name": "samplebook-gbap",
              "namespace": "sample",
              "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
            },
            "name": "samplebook-gbap",
            "namespace": "sample",
            "podStatusCount": Object {},
            "remoteSubscriptionStatusCount": Object {},
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
          }
        }
        deleteSuccessFinished={[Function]}
        forceRefresh={[Function]}
        handleClose={[MockFunction]}
        handleSubmit={[MockFunction]}
        label={
          Object {
            "heading": "modal.remove-hcmapplication.heading",
            "label": "modal.remove-hcmapplication.label",
            "primaryBtn": "modal.remove-hcmapplication.heading",
          }
        }
        locale="en"
        mutateSuccessFinished={[Function]}
        open={true}
        resourceType={
          Object {
            "list": "HCMApplicationList",
            "name": "HCMApplication",
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
        }
        submitDeleteSuccess={[Function]}
        type="actionModal"
      >
        <div>
          <Modal
            aria-label="Delete application"
            danger={true}
            focusTrap={true}
            iconDescription="close the modal"
            id="remove-resource-modal"
            modalHeading="Delete application"
            modalLabel="Application"
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            onRequestSubmit={[Function]}
            open={true}
            passiveModal={false}
            primaryButtonDisabled={true}
            primaryButtonText="Delete application"
            role="region"
            secondaryButtonText="Cancel"
            selectorPrimaryFocus="[data-modal-primary-focus]"
          >
            <FocusTrap
              _createFocusTrap={[Function]}
              active={true}
              focusTrapOptions={
                Object {
                  "initialFocus": [Function],
                }
              }
              paused={false}
            >
              <div
                aria-label="Delete application"
                className="bx--modal bx--modal-tall is-visible bx--modal--danger"
                id="remove-resource-modal"
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onTransitionEnd={[Function]}
                role="presentation"
                tabIndex={-1}
              >
                <div
                  aria-modal="true"
                  className="bx--modal-container"
                  role="dialog"
                >
                  <div
                    className="bx--modal-header"
                  >
                    <p
                      className="bx--modal-header__label"
                    >
                      Application
                    </p>
                    <p
                      className="bx--modal-header__heading"
                    >
                      Delete application
                    </p>
                    <button
                      className="bx--modal-close"
                      onClick={[Function]}
                      title="close the modal"
                      type="button"
                    >
                      <Icon
                        className="bx--modal-close__icon"
                        description="close the modal"
                        fillRule="evenodd"
                        icon={
                          Object {
                            "height": "10",
                            "id": "icon--close",
                            "name": "icon--close",
                            "styles": "",
                            "svgData": Object {
                              "circles": "",
                              "ellipses": "",
                              "paths": Array [
                                Object {
                                  "d": "M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z",
                                  "fill-rule": "nonzero",
                                },
                              ],
                              "polygons": "",
                              "polylines": "",
                              "rects": "",
                            },
                            "tags": "icon--close",
                            "viewBox": "0 0 10 10",
                            "width": "10",
                          }
                        }
                        role="img"
                      >
                        <svg
                          alt="close the modal"
                          aria-label="close the modal"
                          className="bx--modal-close__icon"
                          fillRule="evenodd"
                          height="10"
                          role="img"
                          viewBox="0 0 10 10"
                          width="10"
                        >
                          <title>
                            close the modal
                          </title>
                          <path
                            d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
                            key="key0"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </div>
                  <div
                    className="bx--modal-content"
                  >
                    <div />
                    <p>
                      Removing {0} is irreversible. Are you sure that you want to continue?
                    </p>
                  </div>
                  <div
                    className="bx--modal-footer"
                  >
                    <ForwardRef
                      disabled={false}
                      iconDescription="Provide icon description if icon is used"
                      kind="tertiary"
                      onClick={[Function]}
                      small={false}
                      tabIndex={0}
                      type="button"
                    >
                      <button
                        className="bx--btn bx--btn--tertiary"
                        disabled={false}
                        onClick={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        Cancel
                      </button>
                    </ForwardRef>
                    <ForwardRef
                      disabled={true}
                      iconDescription="Provide icon description if icon is used"
                      inputref={
                        Object {
                          "current": <button
                            class="bx--btn bx--btn--danger--primary bx--btn--disabled"
                            disabled=""
                            tabindex="0"
                            type="button"
                          >
                            Delete application
                          </button>,
                        }
                      }
                      kind="danger--primary"
                      onClick={[Function]}
                      small={false}
                      tabIndex={0}
                      type="button"
                    >
                      <button
                        className="bx--btn bx--btn--danger--primary bx--btn--disabled"
                        disabled={true}
                        onClick={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        Delete application
                      </button>
                    </ForwardRef>
                  </div>
                </div>
              </div>
            </FocusTrap>
          </Modal>
        </div>
      </RemoveResourceModal>
    </Connect(RemoveResourceModal)>
  </Router>
</BrowserRouter>
`;

exports[`RemoveResourceModal test renders as expected without mocked data, to cover this.client onClose 3`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(RemoveResourceModal)
      data={
        Object {
          "__typename": "Application",
          "_uid": "local-cluster/42d4c013-52b9-11ea-bf05-00000a102d26",
          "clusterCount": 0,
          "created": "2019-12-11T01:24:02Z",
          "dashboard": null,
          "hubSubscriptions": Array [],
          "kind": "HCMApplication",
          "metadata": Object {
            "name": "samplebook-gbap",
            "namespace": "sample",
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
          },
          "name": "samplebook-gbap",
          "namespace": "sample",
          "podStatusCount": Object {},
          "remoteSubscriptionStatusCount": Object {},
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
      type="actionModal"
    >
      <RemoveResourceModal
        data={
          Object {
            "__typename": "Application",
            "_uid": "local-cluster/42d4c013-52b9-11ea-bf05-00000a102d26",
            "clusterCount": 0,
            "created": "2019-12-11T01:24:02Z",
            "dashboard": null,
            "hubSubscriptions": Array [],
            "kind": "HCMApplication",
            "metadata": Object {
              "name": "samplebook-gbap",
              "namespace": "sample",
              "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
            },
            "name": "samplebook-gbap",
            "namespace": "sample",
            "podStatusCount": Object {},
            "remoteSubscriptionStatusCount": Object {},
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/sample/applications/samplebook-gbap",
          }
        }
        deleteSuccessFinished={[Function]}
        forceRefresh={[Function]}
        handleClose={[MockFunction]}
        handleSubmit={[MockFunction]}
        label={
          Object {
            "heading": "modal.remove-hcmapplication.heading",
            "label": "modal.remove-hcmapplication.label",
            "primaryBtn": "modal.remove-hcmapplication.heading",
          }
        }
        locale="en"
        mutateSuccessFinished={[Function]}
        open={true}
        resourceType={
          Object {
            "list": "HCMApplicationList",
            "name": "HCMApplication",
          }
        }
        store={
          Object {
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
        }
        submitDeleteSuccess={[Function]}
        type="actionModal"
      >
        <div>
          <Modal
            aria-label="Delete application"
            danger={true}
            focusTrap={true}
            iconDescription="close the modal"
            id="remove-resource-modal"
            modalHeading="Delete application"
            modalLabel="Application"
            onKeyDown={[Function]}
            onRequestClose={[Function]}
            onRequestSubmit={[Function]}
            open={true}
            passiveModal={false}
            primaryButtonDisabled={true}
            primaryButtonText="Delete application"
            role="region"
            secondaryButtonText="Cancel"
            selectorPrimaryFocus="[data-modal-primary-focus]"
          >
            <FocusTrap
              _createFocusTrap={[Function]}
              active={true}
              focusTrapOptions={
                Object {
                  "initialFocus": [Function],
                }
              }
              paused={false}
            >
              <div
                aria-label="Delete application"
                className="bx--modal bx--modal-tall is-visible bx--modal--danger"
                id="remove-resource-modal"
                onBlur={[Function]}
                onClick={[Function]}
                onKeyDown={[Function]}
                onTransitionEnd={[Function]}
                role="presentation"
                tabIndex={-1}
              >
                <div
                  aria-modal="true"
                  className="bx--modal-container"
                  role="dialog"
                >
                  <div
                    className="bx--modal-header"
                  >
                    <p
                      className="bx--modal-header__label"
                    >
                      Application
                    </p>
                    <p
                      className="bx--modal-header__heading"
                    >
                      Delete application
                    </p>
                    <button
                      className="bx--modal-close"
                      onClick={[Function]}
                      title="close the modal"
                      type="button"
                    >
                      <Icon
                        className="bx--modal-close__icon"
                        description="close the modal"
                        fillRule="evenodd"
                        icon={
                          Object {
                            "height": "10",
                            "id": "icon--close",
                            "name": "icon--close",
                            "styles": "",
                            "svgData": Object {
                              "circles": "",
                              "ellipses": "",
                              "paths": Array [
                                Object {
                                  "d": "M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z",
                                  "fill-rule": "nonzero",
                                },
                              ],
                              "polygons": "",
                              "polylines": "",
                              "rects": "",
                            },
                            "tags": "icon--close",
                            "viewBox": "0 0 10 10",
                            "width": "10",
                          }
                        }
                        role="img"
                      >
                        <svg
                          alt="close the modal"
                          aria-label="close the modal"
                          className="bx--modal-close__icon"
                          fillRule="evenodd"
                          height="10"
                          role="img"
                          viewBox="0 0 10 10"
                          width="10"
                        >
                          <title>
                            close the modal
                          </title>
                          <path
                            d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
                            key="key0"
                          />
                        </svg>
                      </Icon>
                    </button>
                  </div>
                  <div
                    className="bx--modal-content"
                  >
                    <div />
                    <p>
                      Removing {0} is irreversible. Are you sure that you want to continue?
                    </p>
                  </div>
                  <div
                    className="bx--modal-footer"
                  >
                    <ForwardRef
                      disabled={false}
                      iconDescription="Provide icon description if icon is used"
                      kind="tertiary"
                      onClick={[Function]}
                      small={false}
                      tabIndex={0}
                      type="button"
                    >
                      <button
                        className="bx--btn bx--btn--tertiary"
                        disabled={false}
                        onClick={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        Cancel
                      </button>
                    </ForwardRef>
                    <ForwardRef
                      disabled={true}
                      iconDescription="Provide icon description if icon is used"
                      inputref={
                        Object {
                          "current": <button
                            class="bx--btn bx--btn--danger--primary bx--btn--disabled"
                            disabled=""
                            tabindex="0"
                            type="button"
                          >
                            Delete application
                          </button>,
                        }
                      }
                      kind="danger--primary"
                      onClick={[Function]}
                      small={false}
                      tabIndex={0}
                      type="button"
                    >
                      <button
                        className="bx--btn bx--btn--danger--primary bx--btn--disabled"
                        disabled={true}
                        onClick={[Function]}
                        tabIndex={0}
                        type="button"
                      >
                        Delete application
                      </button>
                    </ForwardRef>
                  </div>
                </div>
              </div>
            </FocusTrap>
          </Modal>
        </div>
      </RemoveResourceModal>
    </Connect(RemoveResourceModal)>
  </Router>
</BrowserRouter>
`;
