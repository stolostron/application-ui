// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateResourceModal modal convertFilterArray as expected 1`] = `
Array [
  Object {
    "key": "standards",
    "value": Object {
      "availableSet": Array [
        "FISMA",
        "PCI",
        "HIPAA",
        "NIST",
      ],
      "name": "Standards",
    },
  },
  Object {
    "key": "categories",
    "value": Object {
      "availableSet": Array [
        "System And Communications Protections",
        "System And Information Integrity",
      ],
      "name": "Categories",
    },
  },
  Object {
    "key": "controls",
    "value": Object {
      "availableSet": Array [
        "Secret Encryption",
        "Cert Manager",
        "Mutation Advisor",
        "VA",
      ],
      "name": "Controls",
    },
  },
  Object {
    "key": "type",
    "value": Object {
      "availableSet": Array [
        "Enforce",
        "Inform only",
      ],
      "name": "Type",
    },
  },
  Object {
    "key": "severity",
    "value": Object {
      "availableSet": Array [],
    },
  },
]
`;

exports[`CreateResourceModal modal convertFilterArray as expected 2`] = `
<NestedTable
  availableItems={
    Array [
      Object {
        "key": "standards",
        "value": Object {
          "availableSet": Array [
            "FISMA",
            "PCI",
            "HIPAA",
            "NIST",
          ],
          "name": "Standards",
        },
      },
      Object {
        "key": "categories",
        "value": Object {
          "availableSet": Array [
            "System And Communications Protections",
            "System And Information Integrity",
          ],
          "name": "Categories",
        },
      },
      Object {
        "key": "controls",
        "value": Object {
          "availableSet": Array [
            "Secret Encryption",
            "Cert Manager",
            "Mutation Advisor",
            "VA",
          ],
          "name": "Controls",
        },
      },
      Object {
        "key": "type",
        "value": Object {
          "availableSet": Array [
            "Enforce",
            "Inform only",
          ],
          "name": "Type",
        },
      },
      Object {
        "key": "severity",
        "value": Object {
          "availableSet": Array [],
        },
      },
    ]
  }
  header="Name"
  selectedItems={
    Array [
      "testConvertFilterArray",
    ]
  }
  selectionChanged={[MockFunction]}
/>
`;

exports[`CreateResourceModal modal handleSubmitClick as expected 1`] = `
Object {
  "tags": Array [],
}
`;

exports[`CreateResourceModal modal renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterModal
    handleModalClose={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Modal
        className="modal-with-editor"
        focusTrap={true}
        iconDescription="close the modal"
        modalHeading="Resource Filter"
        modalLabel=""
        onKeyDown={[Function]}
        onRequestClose={[MockFunction]}
        onRequestSubmit={[Function]}
        passiveModal={false}
        primaryButtonDisabled={false}
        primaryButtonText="Save"
        secondaryButtonText="Cancel"
        selectorPrimaryFocus="[data-modal-primary-focus]"
      >
        <NestedTable
          availableItems={Array []}
          header="Name"
          selectedItems={Array []}
          selectionChanged={[Function]}
        />
      </Modal>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <NestedTable
          availableItems={Array []}
          header="Name"
          selectedItems={Array []}
          selectionChanged={[Function]}
        />,
        "className": "modal-with-editor",
        "focusTrap": true,
        "iconDescription": "close the modal",
        "modalHeading": "Resource Filter",
        "modalLabel": "",
        "onKeyDown": [Function],
        "onRequestClose": [MockFunction],
        "onRequestSubmit": [Function],
        "open": undefined,
        "passiveModal": false,
        "primaryButtonDisabled": false,
        "primaryButtonText": "Save",
        "secondaryButtonText": "Cancel",
        "selectorPrimaryFocus": "[data-modal-primary-focus]",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "availableItems": Array [],
          "header": "Name",
          "selectedItems": Array [],
          "selectionChanged": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Modal
          className="modal-with-editor"
          focusTrap={true}
          iconDescription="close the modal"
          modalHeading="Resource Filter"
          modalLabel=""
          onKeyDown={[Function]}
          onRequestClose={[MockFunction]}
          onRequestSubmit={[Function]}
          passiveModal={false}
          primaryButtonDisabled={false}
          primaryButtonText="Save"
          secondaryButtonText="Cancel"
          selectorPrimaryFocus="[data-modal-primary-focus]"
        >
          <NestedTable
            availableItems={Array []}
            header="Name"
            selectedItems={Array []}
            selectionChanged={[Function]}
          />
        </Modal>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <NestedTable
            availableItems={Array []}
            header="Name"
            selectedItems={Array []}
            selectionChanged={[Function]}
          />,
          "className": "modal-with-editor",
          "focusTrap": true,
          "iconDescription": "close the modal",
          "modalHeading": "Resource Filter",
          "modalLabel": "",
          "onKeyDown": [Function],
          "onRequestClose": [MockFunction],
          "onRequestSubmit": [Function],
          "open": undefined,
          "passiveModal": false,
          "primaryButtonDisabled": false,
          "primaryButtonText": "Save",
          "secondaryButtonText": "Cancel",
          "selectorPrimaryFocus": "[data-modal-primary-focus]",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "availableItems": Array [],
            "header": "Name",
            "selectedItems": Array [],
            "selectionChanged": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`CreateResourceModal modal selectionChanged as expected 1`] = `
Object {
  "tags": Array [
    "testSelectionChanged1",
    "testSelectionChanged2",
  ],
}
`;
