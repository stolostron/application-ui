'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _react3 = require('@storybook/react');

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var props = {
  style: {
    margin: '50px'
  },
  fill: 'grey',
  description: 'This is a description of the icon and what it does in context',
  className: 'extra-class'
};

(0, _react3.storiesOf)('Icon', module).addWithInfo('Default', '\n    Icons are used in the product to present common actions and commands. Modify the fill property to change the color of the icon. The name property defines which icon to display. For accessibility, provide a context-rich description with the description prop. For a full list of icon names, see carbondesignsystem.com/style/iconography/library\n  ', function () {
  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(_Icon2.default, _extends({ name: 'icon--add' }, props)),
    _react2.default.createElement(_Icon2.default, _extends({ name: 'add--glyph' }, props)),
    _react2.default.createElement(_Icon2.default, _extends({ name: 'add--outline' }, props))
  );
});