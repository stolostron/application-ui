"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ModalFooter = exports.ModalBody = exports.ModalHeader = exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Button = _interopRequireDefault(require("../Button"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _classnames = _interopRequireDefault(require("classnames"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var ComposedModal =
/*#__PURE__*/
function (_Component) {
  _inherits(ComposedModal, _Component);

  function ComposedModal() {
    var _ref;

    var _temp, _this;

    _classCallCheck(this, ComposedModal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = ComposedModal.__proto__ || Object.getPrototypeOf(ComposedModal)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), "state", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: {
        open: _this.props.open
      }
    }), Object.defineProperty(_assertThisInitialized(_this), "handleKeyDown", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function value(evt) {
        if (evt.which === 27) {
          _this.closeModal();
        }

        _this.props.onKeyDown(evt);
      }
    }), Object.defineProperty(_assertThisInitialized(_this), "closeModal", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function value() {
        _this.setState({
          open: false
        });
      }
    }), _temp));
  }

  _createClass(ComposedModal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.modal) {
        this.modal.focus();
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.open !== this.state.open) {
        this.setState({
          open: nextProps.open
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var open = this.state.open;

      var _props = this.props,
          className = _props.className,
          containerClassName = _props.containerClassName,
          children = _props.children,
          other = _objectWithoutProperties(_props, ["className", "containerClassName", "children"]);

      var modalClass = (0, _classnames.default)(_defineProperty({
        'bx--modal': true,
        'is-visible': open
      }, className, className));
      var containerClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-container': true
      }, containerClassName, containerClassName));

      var childrenWithProps = _react.default.Children.toArray(children).map(function (child) {
        if (child.type === ModalHeader || child.type === ModalFooter) {
          return _react.default.cloneElement(child, {
            closeModal: _this2.closeModal
          });
        }

        return child;
      });

      return _react.default.createElement("div", _extends({}, other, {
        role: "presentation",
        ref: function ref(modal) {
          return _this2.modal = modal;
        },
        onKeyDown: this.handleKeyDown,
        className: modalClass,
        tabIndex: -1
      }), _react.default.createElement("div", {
        className: containerClass
      }, childrenWithProps));
    }
  }]);

  return ComposedModal;
}(_react.Component);

exports.default = ComposedModal;
Object.defineProperty(ComposedModal, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    onKeyDown: function onKeyDown() {}
  }
});
Object.defineProperty(ComposedModal, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: _propTypes.default.string,
    containerClassName: _propTypes.default.string,
    onKeyDown: _propTypes.default.func
  }
});

var ModalHeader =
/*#__PURE__*/
function (_Component2) {
  _inherits(ModalHeader, _Component2);

  function ModalHeader() {
    var _ref2;

    var _temp2, _this3;

    _classCallCheck(this, ModalHeader);

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return _possibleConstructorReturn(_this3, (_temp2 = _this3 = _possibleConstructorReturn(this, (_ref2 = ModalHeader.__proto__ || Object.getPrototypeOf(ModalHeader)).call.apply(_ref2, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this3), "handleCloseButtonClick", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function value() {
        _this3.props.closeModal();

        _this3.props.buttonOnClick();
      }
    }), _temp2));
  }

  _createClass(ModalHeader, [{
    key: "render",
    value: function render() {
      var _props2 = this.props,
          className = _props2.className,
          labelClassName = _props2.labelClassName,
          titleClassName = _props2.titleClassName,
          closeClassName = _props2.closeClassName,
          closeIconClassName = _props2.closeIconClassName,
          label = _props2.label,
          title = _props2.title,
          children = _props2.children,
          iconDescription = _props2.iconDescription,
          closeModal = _props2.closeModal,
          buttonOnClick = _props2.buttonOnClick,
          other = _objectWithoutProperties(_props2, ["className", "labelClassName", "titleClassName", "closeClassName", "closeIconClassName", "label", "title", "children", "iconDescription", "closeModal", "buttonOnClick"]);

      var headerClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-header': true
      }, className, className));
      var labelClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-header__label bx--type-delta': true
      }, labelClassName, labelClassName));
      var titleClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-header__heading bx--type-beta': true
      }, titleClassName, titleClassName));
      var closeClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-close': true
      }, closeClassName, closeClassName));
      var closeIconClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-close__icon': true
      }, closeIconClassName, closeIconClassName));
      return _react.default.createElement("div", _extends({
        className: headerClass
      }, other), label && _react.default.createElement("p", {
        className: labelClass
      }, label), title && _react.default.createElement("p", {
        className: titleClass
      }, title), children, _react.default.createElement("button", {
        onClick: this.handleCloseButtonClick,
        className: closeClass,
        type: "button"
      }, _react.default.createElement(_Icon.default, {
        name: "close",
        className: closeIconClass,
        description: iconDescription
      })));
    }
  }]);

  return ModalHeader;
}(_react.Component);

exports.ModalHeader = ModalHeader;
Object.defineProperty(ModalHeader, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    iconDescription: 'Close the modal',
    buttonOnClick: function buttonOnClick() {}
  }
});
Object.defineProperty(ModalHeader, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: _propTypes.default.string,
    labelClassName: _propTypes.default.string,
    titleClassName: _propTypes.default.string,
    closeClassName: _propTypes.default.string,
    closeIconClassName: _propTypes.default.string,
    label: _propTypes.default.string,
    title: _propTypes.default.string,
    children: _propTypes.default.node,
    iconDescription: _propTypes.default.string,
    closeModal: _propTypes.default.func,
    buttonOnClick: _propTypes.default.func
  }
});

var ModalBody =
/*#__PURE__*/
function (_Component3) {
  _inherits(ModalBody, _Component3);

  function ModalBody() {
    _classCallCheck(this, ModalBody);

    return _possibleConstructorReturn(this, (ModalBody.__proto__ || Object.getPrototypeOf(ModalBody)).apply(this, arguments));
  }

  _createClass(ModalBody, [{
    key: "render",
    value: function render() {
      var _props3 = this.props,
          className = _props3.className,
          children = _props3.children,
          other = _objectWithoutProperties(_props3, ["className", "children"]);

      var contentClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-content': true
      }, className, className));
      return _react.default.createElement("div", _extends({
        className: contentClass
      }, other), children);
    }
  }]);

  return ModalBody;
}(_react.Component);

exports.ModalBody = ModalBody;
Object.defineProperty(ModalBody, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: _propTypes.default.string
  }
});

var ModalFooter =
/*#__PURE__*/
function (_Component4) {
  _inherits(ModalFooter, _Component4);

  function ModalFooter() {
    var _ref3;

    var _temp3, _this4;

    _classCallCheck(this, ModalFooter);

    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    return _possibleConstructorReturn(_this4, (_temp3 = _this4 = _possibleConstructorReturn(this, (_ref3 = ModalFooter.__proto__ || Object.getPrototypeOf(ModalFooter)).call.apply(_ref3, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this4), "handleRequestClose", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function value(evt) {
        _this4.props.closeModal();

        _this4.props.onRequestClose(evt);
      }
    }), _temp3));
  }

  _createClass(ModalFooter, [{
    key: "render",
    value: function render() {
      var _props4 = this.props,
          className = _props4.className,
          primaryClassName = _props4.primaryClassName,
          secondaryClassName = _props4.secondaryClassName,
          secondaryButtonText = _props4.secondaryButtonText,
          primaryButtonText = _props4.primaryButtonText,
          primaryButtonDisabled = _props4.primaryButtonDisabled,
          closeModal = _props4.closeModal,
          onRequestClose = _props4.onRequestClose,
          onRequestSubmit = _props4.onRequestSubmit,
          children = _props4.children,
          other = _objectWithoutProperties(_props4, ["className", "primaryClassName", "secondaryClassName", "secondaryButtonText", "primaryButtonText", "primaryButtonDisabled", "closeModal", "onRequestClose", "onRequestSubmit", "children"]);

      var footerClass = (0, _classnames.default)(_defineProperty({
        'bx--modal-footer': true
      }, className, className));
      var primaryClass = (0, _classnames.default)(_defineProperty({}, primaryClassName, primaryClassName));
      var secondaryClass = (0, _classnames.default)(_defineProperty({}, secondaryClassName, secondaryClassName));
      return _react.default.createElement("div", _extends({
        className: footerClass
      }, other), secondaryButtonText && _react.default.createElement(_Button.default, {
        className: secondaryClass,
        onClick: this.handleRequestClose,
        kind: "secondary"
      }, secondaryButtonText), primaryButtonText && _react.default.createElement(_Button.default, {
        onClick: onRequestSubmit,
        className: primaryClass,
        disabled: primaryButtonDisabled,
        kind: "primary"
      }, primaryButtonText), children);
    }
  }]);

  return ModalFooter;
}(_react.Component);

exports.ModalFooter = ModalFooter;
Object.defineProperty(ModalFooter, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    className: _propTypes.default.string,
    primaryClassName: _propTypes.default.string,
    secondaryClassName: _propTypes.default.string,
    secondaryButtonText: _propTypes.default.string,
    primaryButtonText: _propTypes.default.string,
    primaryButtonDisabled: _propTypes.default.bool,
    onRequestClose: _propTypes.default.func,
    onRequestSubmit: _propTypes.default.func,
    closeModal: _propTypes.default.func,
    children: _propTypes.default.node
  }
});
Object.defineProperty(ModalFooter, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    onRequestClose: function onRequestClose() {},
    onRequestSubmit: function onRequestSubmit() {}
  }
});