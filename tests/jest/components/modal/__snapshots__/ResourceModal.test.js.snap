// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResourceModal test renders as expected 1 1`] = `undefined`;

exports[`ResourceModal test renders as expected 1 2`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <ResourceModal
      data={
        Object {
          "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
          "clusterName": "",
          "kind": "",
          "name": "guestbook-app",
          "namespace": "default",
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <div
        id="resource-modal-container"
        onKeyDown={[Function]}
        role="region"
        tabIndex="-1"
      >
         
        <Loading
          active={true}
          small={false}
          withOverlay={true}
        >
          <div
            className="bx--loading-overlay"
          >
            <div
              aria-live="assertive"
              className="bx--loading"
            >
              <svg
                className="bx--loading__svg"
                viewBox="-75 -75 150 150"
              >
                <circle
                  cx="0"
                  cy="0"
                  r="37.5"
                />
              </svg>
            </div>
          </div>
        </Loading>
        <ComposedModal
          aria-label="Delete application"
          className="modal-with-editor"
          id="resource-modal-[object Object]"
          onClose={[Function]}
          onKeyDown={[Function]}
          open={true}
          role="region"
          selectorPrimaryFocus="[data-modal-primary-focus]"
        >
          <div
            aria-label="Delete application"
            className="bx--modal is-visible modal-with-editor"
            id="resource-modal-[object Object]"
            onBlur={[Function]}
            onClick={[Function]}
            onClose={[Function]}
            onKeyDown={[Function]}
            onTransitionEnd={[Function]}
            open={true}
            role="presentation"
            tabIndex={-1}
          >
            <div
              className="bx--modal-container"
            >
              <ModalHeader
                buttonOnClick={[Function]}
                closeModal={[Function]}
                iconDescription="Close the modal"
                key=".0"
                title="Delete application"
              >
                <div
                  className="bx--modal-header"
                >
                  <p
                    className="bx--modal-header__heading bx--type-beta"
                  >
                    Delete application
                  </p>
                  <button
                    className="bx--modal-close"
                    onClick={[Function]}
                    type="button"
                  >
                    <Icon
                      className="bx--modal-close__icon"
                      description="Close the modal"
                      fillRule="evenodd"
                      icon={
                        Object {
                          "height": "10",
                          "id": "icon--close",
                          "name": "icon--close",
                          "styles": "",
                          "svgData": Object {
                            "circles": "",
                            "ellipses": "",
                            "paths": Array [
                              Object {
                                "d": "M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z",
                                "fill-rule": "nonzero",
                              },
                            ],
                            "polygons": "",
                            "polylines": "",
                            "rects": "",
                          },
                          "tags": "icon--close",
                          "viewBox": "0 0 10 10",
                          "width": "10",
                        }
                      }
                      role="img"
                    >
                      <svg
                        alt="Close the modal"
                        aria-label="Close the modal"
                        className="bx--modal-close__icon"
                        fillRule="evenodd"
                        height="10"
                        role="img"
                        viewBox="0 0 10 10"
                        width="10"
                      >
                        <title>
                          Close the modal
                        </title>
                        <path
                          d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
                          key="key0"
                        />
                      </svg>
                    </Icon>
                  </button>
                </div>
              </ModalHeader>
              <ModalBody
                key=".1"
              >
                <div
                  className="bx--modal-content"
                >
                  <div
                    className="help-link-edit"
                  >
                    <a
                      href="https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html/manage_applications/managing-applications#managing-application-resources"
                      target="_blank"
                    >
                      View doc
                    </a>
                    <a
                      href="https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html/manage_applications/managing-applications#managing-application-resources"
                      target="_blank"
                    >
                      <Icon
                        className="helpLinkIcon"
                        description=""
                        fill="#6089bf"
                        fillRule="evenodd"
                        name="icon--launch"
                        role="img"
                      >
                        <svg
                          alt=""
                          aria-label=""
                          className="helpLinkIcon"
                          fill="#6089bf"
                          fillRule="evenodd"
                          height="16"
                          name="icon--launch"
                          role="img"
                          viewBox="0 0 16 16"
                          width="16"
                        >
                          <title />
                          <path
                            d="M14.3 1h-3.8V0H16v5.5h-1V1.7L9.7 7 9 6.3 14.3 1z"
                            key="key0"
                          />
                          <path
                            d="M14.3 1h-3.8V0H16v5.5h-1V1.7L9.7 7 9 6.3 14.3 1z"
                            key="key1"
                          />
                          <path
                            d="M13 9h1v6c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V3c0-.6.4-1 1-1h7v1H1v12h12V9z"
                            key="key2"
                          />
                        </svg>
                      </Icon>
                    </a>
                  </div>
                  <div>
                    <div
                      className="yamlEditorContainerContainer"
                    >
                      <YamlEditor
                        onYamlChange={[Function]}
                        readOnly={false}
                        setEditor={[Function]}
                      >
                        <div
                          className="yamlEditorContainer"
                        >
                          <IsomorphicEditor
                            fontSize={12}
                            height="40vh"
                            key="loading"
                            language="yaml"
                            onChange={[Function]}
                            options={
                              Object {
                                "glyphMargin": true,
                                "readOnly": false,
                                "scrollBeyondLastLine": false,
                                "scrollbar": Object {
                                  "horizontalScrollbarSize": 17,
                                  "verticalScrollbarSize": 17,
                                },
                                "smoothScrolling": true,
                                "tabSize": 2,
                                "wordWrapMinified": false,
                              }
                            }
                            setEditor={[Function]}
                            theme="console"
                            width="49.5vw"
                          >
                            <MonacoEditor
                              defaultValue=""
                              editorDidMount={[Function]}
                              editorWillMount={[Function]}
                              fontSize={12}
                              height="40vh"
                              language="yaml"
                              onChange={[Function]}
                              options={
                                Object {
                                  "glyphMargin": true,
                                  "readOnly": false,
                                  "scrollBeyondLastLine": false,
                                  "scrollbar": Object {
                                    "horizontalScrollbarSize": 17,
                                    "verticalScrollbarSize": 17,
                                  },
                                  "smoothScrolling": true,
                                  "tabSize": 2,
                                  "wordWrapMinified": false,
                                }
                              }
                              overrideServices={Object {}}
                              setEditor={[Function]}
                              theme="console"
                              value={null}
                              width="49.5vw"
                            >
                              <div
                                className="react-monaco-editor-container"
                                style={
                                  Object {
                                    "height": "40vh",
                                    "width": "49.5vw",
                                  }
                                }
                              />
                            </MonacoEditor>
                          </IsomorphicEditor>
                        </div>
                      </YamlEditor>
                    </div>
                  </div>
                </div>
              </ModalBody>
              <ModalFooter
                closeModal={[Function]}
                inputref={
                  Object {
                    "current": <button
                      class="bx--btn bx--btn--primary"
                      inputref="[object Object]"
                      tabindex="0"
                      type="button"
                    >
                      Save
                    </button>,
                  }
                }
                key=".2"
                onRequestClose={[Function]}
                onRequestSubmit={[Function]}
                primaryButtonText="Save"
                secondaryButtonText="Cancel"
              >
                <div
                  className="bx--modal-footer"
                  inputref={
                    Object {
                      "current": <button
                        class="bx--btn bx--btn--primary"
                        inputref="[object Object]"
                        tabindex="0"
                        type="button"
                      >
                        Save
                      </button>,
                    }
                  }
                >
                  <Button
                    className=""
                    disabled={false}
                    iconDescription="Provide icon description if icon is used"
                    kind="secondary"
                    onClick={[Function]}
                    small={false}
                    tabIndex={0}
                    type="button"
                  >
                    <button
                      className="bx--btn bx--btn--secondary"
                      disabled={false}
                      onClick={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      Cancel
                    </button>
                  </Button>
                  <Button
                    className=""
                    disabled={false}
                    iconDescription="Provide icon description if icon is used"
                    inputref={
                      Object {
                        "current": <button
                          class="bx--btn bx--btn--primary"
                          inputref="[object Object]"
                          tabindex="0"
                          type="button"
                        >
                          Save
                        </button>,
                      }
                    }
                    kind="primary"
                    onClick={[Function]}
                    small={false}
                    tabIndex={0}
                    type="button"
                  >
                    <button
                      className="bx--btn bx--btn--primary"
                      disabled={false}
                      inputref={
                        Object {
                          "current": <button
                            class="bx--btn bx--btn--primary"
                            inputref="[object Object]"
                            tabindex="0"
                            type="button"
                          >
                            Save
                          </button>,
                        }
                      }
                      onClick={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      Save
                    </button>
                  </Button>
                </div>
              </ModalFooter>
            </div>
          </div>
        </ComposedModal>
      </div>
    </ResourceModal>
  </Router>
</BrowserRouter>
`;

exports[`ResourceModal test renders as expected 1 3`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <ResourceModal
      data={
        Object {
          "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
          "clusterName": "",
          "kind": "",
          "name": "guestbook-app",
          "namespace": "default",
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <div
        id="resource-modal-container"
        onKeyDown={[Function]}
        role="region"
        tabIndex="-1"
      >
         
        <Loading
          active={true}
          small={false}
          withOverlay={true}
        >
          <div
            className="bx--loading-overlay"
          >
            <div
              aria-live="assertive"
              className="bx--loading"
            >
              <svg
                className="bx--loading__svg"
                viewBox="-75 -75 150 150"
              >
                <circle
                  cx="0"
                  cy="0"
                  r="37.5"
                />
              </svg>
            </div>
          </div>
        </Loading>
        <ComposedModal
          aria-label="Delete application"
          className="modal-with-editor"
          id="resource-modal-[object Object]"
          onClose={[Function]}
          onKeyDown={[Function]}
          open={true}
          role="region"
          selectorPrimaryFocus="[data-modal-primary-focus]"
        >
          <div
            aria-label="Delete application"
            className="bx--modal is-visible modal-with-editor"
            id="resource-modal-[object Object]"
            onBlur={[Function]}
            onClick={[Function]}
            onClose={[Function]}
            onKeyDown={[Function]}
            onTransitionEnd={[Function]}
            open={true}
            role="presentation"
            tabIndex={-1}
          >
            <div
              className="bx--modal-container"
            >
              <ModalHeader
                buttonOnClick={[Function]}
                closeModal={[Function]}
                iconDescription="Close the modal"
                key=".0"
                title="Delete application"
              >
                <div
                  className="bx--modal-header"
                >
                  <p
                    className="bx--modal-header__heading bx--type-beta"
                  >
                    Delete application
                  </p>
                  <button
                    className="bx--modal-close"
                    onClick={[Function]}
                    type="button"
                  >
                    <Icon
                      className="bx--modal-close__icon"
                      description="Close the modal"
                      fillRule="evenodd"
                      icon={
                        Object {
                          "height": "10",
                          "id": "icon--close",
                          "name": "icon--close",
                          "styles": "",
                          "svgData": Object {
                            "circles": "",
                            "ellipses": "",
                            "paths": Array [
                              Object {
                                "d": "M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z",
                                "fill-rule": "nonzero",
                              },
                            ],
                            "polygons": "",
                            "polylines": "",
                            "rects": "",
                          },
                          "tags": "icon--close",
                          "viewBox": "0 0 10 10",
                          "width": "10",
                        }
                      }
                      role="img"
                    >
                      <svg
                        alt="Close the modal"
                        aria-label="Close the modal"
                        className="bx--modal-close__icon"
                        fillRule="evenodd"
                        height="10"
                        role="img"
                        viewBox="0 0 10 10"
                        width="10"
                      >
                        <title>
                          Close the modal
                        </title>
                        <path
                          d="M6.32 5L10 8.68 8.68 10 5 6.32 1.32 10 0 8.68 3.68 5 0 1.32 1.32 0 5 3.68 8.68 0 10 1.32 6.32 5z"
                          key="key0"
                        />
                      </svg>
                    </Icon>
                  </button>
                </div>
              </ModalHeader>
              <ModalBody
                key=".1"
              >
                <div
                  className="bx--modal-content"
                >
                  <div
                    className="help-link-edit"
                  >
                    <a
                      href="https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html/manage_applications/managing-applications#managing-application-resources"
                      target="_blank"
                    >
                      View doc
                    </a>
                    <a
                      href="https://access.redhat.com/documentation/en-us/red_hat_advanced_cluster_management_for_kubernetes/2.0/html/manage_applications/managing-applications#managing-application-resources"
                      target="_blank"
                    >
                      <Icon
                        className="helpLinkIcon"
                        description=""
                        fill="#6089bf"
                        fillRule="evenodd"
                        name="icon--launch"
                        role="img"
                      >
                        <svg
                          alt=""
                          aria-label=""
                          className="helpLinkIcon"
                          fill="#6089bf"
                          fillRule="evenodd"
                          height="16"
                          name="icon--launch"
                          role="img"
                          viewBox="0 0 16 16"
                          width="16"
                        >
                          <title />
                          <path
                            d="M14.3 1h-3.8V0H16v5.5h-1V1.7L9.7 7 9 6.3 14.3 1z"
                            key="key0"
                          />
                          <path
                            d="M14.3 1h-3.8V0H16v5.5h-1V1.7L9.7 7 9 6.3 14.3 1z"
                            key="key1"
                          />
                          <path
                            d="M13 9h1v6c0 .6-.4 1-1 1H1c-.6 0-1-.4-1-1V3c0-.6.4-1 1-1h7v1H1v12h12V9z"
                            key="key2"
                          />
                        </svg>
                      </Icon>
                    </a>
                  </div>
                  <div>
                    <div
                      className="yamlEditorContainerContainer"
                    >
                      <YamlEditor
                        onYamlChange={[Function]}
                        readOnly={false}
                        setEditor={[Function]}
                      >
                        <div
                          className="yamlEditorContainer"
                        >
                          <IsomorphicEditor
                            fontSize={12}
                            height="40vh"
                            key="loading"
                            language="yaml"
                            onChange={[Function]}
                            options={
                              Object {
                                "glyphMargin": true,
                                "readOnly": false,
                                "scrollBeyondLastLine": false,
                                "scrollbar": Object {
                                  "horizontalScrollbarSize": 17,
                                  "verticalScrollbarSize": 17,
                                },
                                "smoothScrolling": true,
                                "tabSize": 2,
                                "wordWrapMinified": false,
                              }
                            }
                            setEditor={[Function]}
                            theme="console"
                            width="49.5vw"
                          >
                            <MonacoEditor
                              defaultValue=""
                              editorDidMount={[Function]}
                              editorWillMount={[Function]}
                              fontSize={12}
                              height="40vh"
                              language="yaml"
                              onChange={[Function]}
                              options={
                                Object {
                                  "glyphMargin": true,
                                  "readOnly": false,
                                  "scrollBeyondLastLine": false,
                                  "scrollbar": Object {
                                    "horizontalScrollbarSize": 17,
                                    "verticalScrollbarSize": 17,
                                  },
                                  "smoothScrolling": true,
                                  "tabSize": 2,
                                  "wordWrapMinified": false,
                                }
                              }
                              overrideServices={Object {}}
                              setEditor={[Function]}
                              theme="console"
                              value={null}
                              width="49.5vw"
                            >
                              <div
                                className="react-monaco-editor-container"
                                style={
                                  Object {
                                    "height": "40vh",
                                    "width": "49.5vw",
                                  }
                                }
                              />
                            </MonacoEditor>
                          </IsomorphicEditor>
                        </div>
                      </YamlEditor>
                    </div>
                  </div>
                </div>
              </ModalBody>
              <ModalFooter
                closeModal={[Function]}
                inputref={
                  Object {
                    "current": <button
                      class="bx--btn bx--btn--primary"
                      inputref="[object Object]"
                      tabindex="0"
                      type="button"
                    >
                      Save
                    </button>,
                  }
                }
                key=".2"
                onRequestClose={[Function]}
                onRequestSubmit={[Function]}
                primaryButtonText="Save"
                secondaryButtonText="Cancel"
              >
                <div
                  className="bx--modal-footer"
                  inputref={
                    Object {
                      "current": <button
                        class="bx--btn bx--btn--primary"
                        inputref="[object Object]"
                        tabindex="0"
                        type="button"
                      >
                        Save
                      </button>,
                    }
                  }
                >
                  <Button
                    className=""
                    disabled={false}
                    iconDescription="Provide icon description if icon is used"
                    kind="secondary"
                    onClick={[Function]}
                    small={false}
                    tabIndex={0}
                    type="button"
                  >
                    <button
                      className="bx--btn bx--btn--secondary"
                      disabled={false}
                      onClick={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      Cancel
                    </button>
                  </Button>
                  <Button
                    className=""
                    disabled={false}
                    iconDescription="Provide icon description if icon is used"
                    inputref={
                      Object {
                        "current": <button
                          class="bx--btn bx--btn--primary"
                          inputref="[object Object]"
                          tabindex="0"
                          type="button"
                        >
                          Save
                        </button>,
                      }
                    }
                    kind="primary"
                    onClick={[Function]}
                    small={false}
                    tabIndex={0}
                    type="button"
                  >
                    <button
                      className="bx--btn bx--btn--primary"
                      disabled={false}
                      inputref={
                        Object {
                          "current": <button
                            class="bx--btn bx--btn--primary"
                            inputref="[object Object]"
                            tabindex="0"
                            type="button"
                          >
                            Save
                          </button>,
                        }
                      }
                      onClick={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      Save
                    </button>
                  </Button>
                </div>
              </ModalFooter>
            </div>
          </div>
        </ComposedModal>
      </div>
    </ResourceModal>
  </Router>
</BrowserRouter>
`;
