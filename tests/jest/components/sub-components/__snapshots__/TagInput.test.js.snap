// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TagInput component 1 renders as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TagInput
    availableFilters={
      Object {
        "clusterLabels": Array [
          Object {
            "id": "cloud=IBM",
            "key": "cloud",
            "name": "cloud=IBM",
            "type": "clusterLabel",
            "value": "IBM",
          },
          Object {
            "id": "clusterip=9.42.23.230",
            "key": "clusterip",
            "name": "clusterip=9.42.23.230",
            "type": "clusterLabel",
            "value": "9.42.23.230",
          },
        ],
        "clusterNames": Array [
          Object {
            "id": "crucial-owl",
            "name": "cluster=crucial-owl",
            "type": "clusterName",
            "value": "crucial-owl",
          },
        ],
      }
    }
    hideModalButton={false}
    onSelectedFilterChange={[MockFunction]}
    tags={
      Array [
        Object {
          "id": "cloud=IBM",
          "key": "cloud",
          "name": "cloud=IBM",
          "type": "clusterLabel",
          "value": "IBM",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <FilterModal
          availableFilters={
            Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            }
          }
          handleModalClose={[Function]}
          handleModalSubmit={[Function]}
          modalOpen={false}
          selected={
            Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ]
          }
        />,
        <div
          className="tagInput-searchIcon"
        >
          <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />
        </div>,
        <div
          className="tagInput-comboBox tagInput-comboBox__hasTags"
        >
          <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />
        </div>,
        <div
          className="tagInput-cleanButton"
        >
          <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />
        </div>,
        <div
          className="tagInput-copyButton"
        >
          <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>
        </div>,
        <div
          className="tagInput-filterButton"
        >
          <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>
        </div>,
      ],
      "className": "tagInput-filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "availableFilters": Object {
            "clusterLabels": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
            ],
            "clusterNames": Array [
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
          },
          "handleModalClose": [Function],
          "handleModalSubmit": [Function],
          "modalOpen": false,
          "selected": Array [
            Object {
              "id": "cloud=IBM",
              "key": "cloud",
              "name": "cloud=IBM",
              "type": "clusterLabel",
              "value": "IBM",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />,
          "className": "tagInput-searchIcon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--search",
            "description": "search icon",
            "fillRule": "evenodd",
            "name": "icon--search",
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          "className": "tagInput-comboBox tagInput-comboBox__hasTags",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addOnBlur": false,
            "allowBackspace": true,
            "allowNew": true,
            "autofocus": true,
            "autoresize": true,
            "clearInputOnDelete": true,
            "delimiterChars": Array [],
            "delimiters": Array [
              9,
              13,
            ],
            "handleAddition": [Function],
            "handleDelete": [Function],
            "inputAttributes": Object {},
            "maxSuggestionsLength": 6,
            "minQueryLength": 1,
            "noSuggestionsText": null,
            "placeholder": "Add filter tags...",
            "suggestions": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
            "suggestionsFilter": null,
            "tagComponent": [Function],
            "tags": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />,
          "className": "tagInput-cleanButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--close--outline",
            "description": "remove all tags",
            "fillRule": "evenodd",
            "name": "icon--close--outline",
            "onClick": [Function],
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>,
          "className": "tagInput-copyButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />,
            "onCopy": undefined,
            "options": undefined,
            "text": "http://localhost/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "tagInput-button",
              "feedback": "Copied!",
              "feedbackTimeout": 2000,
              "iconDescription": "Copy to clipboard",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>,
          "className": "tagInput-filterButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />,
            "className": "tagInput-button",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--filter",
              "description": "open modal for tags",
              "fillRule": "evenodd",
              "name": "icon--filter",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FilterModal
            availableFilters={
              Object {
                "clusterLabels": Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                ],
                "clusterNames": Array [
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ],
              }
            }
            handleModalClose={[Function]}
            handleModalSubmit={[Function]}
            modalOpen={false}
            selected={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          <div
            className="tagInput-searchIcon"
          >
            <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />
          </div>,
          <div
            className="tagInput-comboBox tagInput-comboBox__hasTags"
          >
            <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />
          </div>,
          <div
            className="tagInput-cleanButton"
          >
            <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />
          </div>,
          <div
            className="tagInput-copyButton"
          >
            <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>
          </div>,
          <div
            className="tagInput-filterButton"
          >
            <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>
          </div>,
        ],
        "className": "tagInput-filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "availableFilters": Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            },
            "handleModalClose": [Function],
            "handleModalSubmit": [Function],
            "modalOpen": false,
            "selected": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />,
            "className": "tagInput-searchIcon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--search",
              "description": "search icon",
              "fillRule": "evenodd",
              "name": "icon--search",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />,
            "className": "tagInput-comboBox tagInput-comboBox__hasTags",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addOnBlur": false,
              "allowBackspace": true,
              "allowNew": true,
              "autofocus": true,
              "autoresize": true,
              "clearInputOnDelete": true,
              "delimiterChars": Array [],
              "delimiters": Array [
                9,
                13,
              ],
              "handleAddition": [Function],
              "handleDelete": [Function],
              "inputAttributes": Object {},
              "maxSuggestionsLength": 6,
              "minQueryLength": 1,
              "noSuggestionsText": null,
              "placeholder": "Add filter tags...",
              "suggestions": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
              "suggestionsFilter": null,
              "tagComponent": [Function],
              "tags": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />,
            "className": "tagInput-cleanButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--close--outline",
              "description": "remove all tags",
              "fillRule": "evenodd",
              "name": "icon--close--outline",
              "onClick": [Function],
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>,
            "className": "tagInput-copyButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />,
              "onCopy": undefined,
              "options": undefined,
              "text": "http://localhost/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "tagInput-button",
                "feedback": "Copied!",
                "feedbackTimeout": 2000,
                "iconDescription": "Copy to clipboard",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>,
            "className": "tagInput-filterButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />,
              "className": "tagInput-button",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "icon--filter",
                "description": "open modal for tags",
                "fillRule": "evenodd",
                "name": "icon--filter",
                "role": "img",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`TagInput component 1 renders as expected 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TagInput
    availableFilters={
      Object {
        "clusterLabels": Array [
          Object {
            "id": "cloud=IBM",
            "key": "cloud",
            "name": "cloud=IBM",
            "type": "clusterLabel",
            "value": "IBM",
          },
          Object {
            "id": "clusterip=9.42.23.230",
            "key": "clusterip",
            "name": "clusterip=9.42.23.230",
            "type": "clusterLabel",
            "value": "9.42.23.230",
          },
        ],
        "clusterNames": Array [
          Object {
            "id": "crucial-owl",
            "name": "cluster=crucial-owl",
            "type": "clusterName",
            "value": "crucial-owl",
          },
        ],
      }
    }
    hideModalButton={false}
    onSelectedFilterChange={[MockFunction]}
    tags={
      Array [
        Object {
          "id": "cloud=IBM",
          "key": "cloud",
          "name": "cloud=IBM",
          "type": "clusterLabel",
          "value": "IBM",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <FilterModal
          availableFilters={
            Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            }
          }
          handleModalClose={[Function]}
          handleModalSubmit={[Function]}
          modalOpen={false}
          selected={
            Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ]
          }
        />,
        <div
          className="tagInput-searchIcon"
        >
          <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />
        </div>,
        <div
          className="tagInput-comboBox tagInput-comboBox__hasTags"
        >
          <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />
        </div>,
        <div
          className="tagInput-cleanButton"
        >
          <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />
        </div>,
        <div
          className="tagInput-copyButton"
        >
          <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>
        </div>,
        <div
          className="tagInput-filterButton"
        >
          <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>
        </div>,
      ],
      "className": "tagInput-filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "availableFilters": Object {
            "clusterLabels": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
            ],
            "clusterNames": Array [
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
          },
          "handleModalClose": [Function],
          "handleModalSubmit": [Function],
          "modalOpen": false,
          "selected": Array [
            Object {
              "id": "cloud=IBM",
              "key": "cloud",
              "name": "cloud=IBM",
              "type": "clusterLabel",
              "value": "IBM",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />,
          "className": "tagInput-searchIcon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--search",
            "description": "search icon",
            "fillRule": "evenodd",
            "name": "icon--search",
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          "className": "tagInput-comboBox tagInput-comboBox__hasTags",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addOnBlur": false,
            "allowBackspace": true,
            "allowNew": true,
            "autofocus": true,
            "autoresize": true,
            "clearInputOnDelete": true,
            "delimiterChars": Array [],
            "delimiters": Array [
              9,
              13,
            ],
            "handleAddition": [Function],
            "handleDelete": [Function],
            "inputAttributes": Object {},
            "maxSuggestionsLength": 6,
            "minQueryLength": 1,
            "noSuggestionsText": null,
            "placeholder": "Add filter tags...",
            "suggestions": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
            "suggestionsFilter": null,
            "tagComponent": [Function],
            "tags": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />,
          "className": "tagInput-cleanButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--close--outline",
            "description": "remove all tags",
            "fillRule": "evenodd",
            "name": "icon--close--outline",
            "onClick": [Function],
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>,
          "className": "tagInput-copyButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />,
            "onCopy": undefined,
            "options": undefined,
            "text": "http://localhost/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "tagInput-button",
              "feedback": "Copied!",
              "feedbackTimeout": 2000,
              "iconDescription": "Copy to clipboard",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>,
          "className": "tagInput-filterButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />,
            "className": "tagInput-button",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--filter",
              "description": "open modal for tags",
              "fillRule": "evenodd",
              "name": "icon--filter",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FilterModal
            availableFilters={
              Object {
                "clusterLabels": Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                ],
                "clusterNames": Array [
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ],
              }
            }
            handleModalClose={[Function]}
            handleModalSubmit={[Function]}
            modalOpen={false}
            selected={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          <div
            className="tagInput-searchIcon"
          >
            <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />
          </div>,
          <div
            className="tagInput-comboBox tagInput-comboBox__hasTags"
          >
            <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />
          </div>,
          <div
            className="tagInput-cleanButton"
          >
            <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />
          </div>,
          <div
            className="tagInput-copyButton"
          >
            <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>
          </div>,
          <div
            className="tagInput-filterButton"
          >
            <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>
          </div>,
        ],
        "className": "tagInput-filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "availableFilters": Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            },
            "handleModalClose": [Function],
            "handleModalSubmit": [Function],
            "modalOpen": false,
            "selected": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />,
            "className": "tagInput-searchIcon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--search",
              "description": "search icon",
              "fillRule": "evenodd",
              "name": "icon--search",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />,
            "className": "tagInput-comboBox tagInput-comboBox__hasTags",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addOnBlur": false,
              "allowBackspace": true,
              "allowNew": true,
              "autofocus": true,
              "autoresize": true,
              "clearInputOnDelete": true,
              "delimiterChars": Array [],
              "delimiters": Array [
                9,
                13,
              ],
              "handleAddition": [Function],
              "handleDelete": [Function],
              "inputAttributes": Object {},
              "maxSuggestionsLength": 6,
              "minQueryLength": 1,
              "noSuggestionsText": null,
              "placeholder": "Add filter tags...",
              "suggestions": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
              "suggestionsFilter": null,
              "tagComponent": [Function],
              "tags": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />,
            "className": "tagInput-cleanButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--close--outline",
              "description": "remove all tags",
              "fillRule": "evenodd",
              "name": "icon--close--outline",
              "onClick": [Function],
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>,
            "className": "tagInput-copyButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />,
              "onCopy": undefined,
              "options": undefined,
              "text": "http://localhost/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "tagInput-button",
                "feedback": "Copied!",
                "feedbackTimeout": 2000,
                "iconDescription": "Copy to clipboard",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>,
            "className": "tagInput-filterButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />,
              "className": "tagInput-button",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "icon--filter",
                "description": "open modal for tags",
                "fillRule": "evenodd",
                "name": "icon--filter",
                "role": "img",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`TagInput component 1 renders as expected 3`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TagInput
    availableFilters={
      Object {
        "clusterLabels": Array [
          Object {
            "id": "cloud=IBM",
            "key": "cloud",
            "name": "cloud=IBM",
            "type": "clusterLabel",
            "value": "IBM",
          },
          Object {
            "id": "clusterip=9.42.23.230",
            "key": "clusterip",
            "name": "clusterip=9.42.23.230",
            "type": "clusterLabel",
            "value": "9.42.23.230",
          },
        ],
        "clusterNames": Array [
          Object {
            "id": "crucial-owl",
            "name": "cluster=crucial-owl",
            "type": "clusterName",
            "value": "crucial-owl",
          },
        ],
      }
    }
    hideModalButton={false}
    onSelectedFilterChange={[MockFunction]}
    tags={
      Array [
        Object {
          "id": "cloud=IBM",
          "key": "cloud",
          "name": "cloud=IBM",
          "type": "clusterLabel",
          "value": "IBM",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <FilterModal
          availableFilters={
            Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            }
          }
          handleModalClose={[Function]}
          handleModalSubmit={[Function]}
          modalOpen={false}
          selected={
            Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ]
          }
        />,
        <div
          className="tagInput-searchIcon"
        >
          <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />
        </div>,
        <div
          className="tagInput-comboBox tagInput-comboBox__hasTags"
        >
          <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />
        </div>,
        <div
          className="tagInput-cleanButton"
        >
          <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />
        </div>,
        <div
          className="tagInput-copyButton"
        >
          <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>
        </div>,
        <div
          className="tagInput-filterButton"
        >
          <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>
        </div>,
      ],
      "className": "tagInput-filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "availableFilters": Object {
            "clusterLabels": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
            ],
            "clusterNames": Array [
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
          },
          "handleModalClose": [Function],
          "handleModalSubmit": [Function],
          "modalOpen": false,
          "selected": Array [
            Object {
              "id": "cloud=IBM",
              "key": "cloud",
              "name": "cloud=IBM",
              "type": "clusterLabel",
              "value": "IBM",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />,
          "className": "tagInput-searchIcon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--search",
            "description": "search icon",
            "fillRule": "evenodd",
            "name": "icon--search",
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          "className": "tagInput-comboBox tagInput-comboBox__hasTags",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addOnBlur": false,
            "allowBackspace": true,
            "allowNew": true,
            "autofocus": true,
            "autoresize": true,
            "clearInputOnDelete": true,
            "delimiterChars": Array [],
            "delimiters": Array [
              9,
              13,
            ],
            "handleAddition": [Function],
            "handleDelete": [Function],
            "inputAttributes": Object {},
            "maxSuggestionsLength": 6,
            "minQueryLength": 1,
            "noSuggestionsText": null,
            "placeholder": "Add filter tags...",
            "suggestions": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
            "suggestionsFilter": null,
            "tagComponent": [Function],
            "tags": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />,
          "className": "tagInput-cleanButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--close--outline",
            "description": "remove all tags",
            "fillRule": "evenodd",
            "name": "icon--close--outline",
            "onClick": [Function],
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>,
          "className": "tagInput-copyButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />,
            "onCopy": undefined,
            "options": undefined,
            "text": "http://localhost/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "tagInput-button",
              "feedback": "Copied!",
              "feedbackTimeout": 2000,
              "iconDescription": "Copy to clipboard",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>,
          "className": "tagInput-filterButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />,
            "className": "tagInput-button",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--filter",
              "description": "open modal for tags",
              "fillRule": "evenodd",
              "name": "icon--filter",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FilterModal
            availableFilters={
              Object {
                "clusterLabels": Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                ],
                "clusterNames": Array [
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ],
              }
            }
            handleModalClose={[Function]}
            handleModalSubmit={[Function]}
            modalOpen={false}
            selected={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          <div
            className="tagInput-searchIcon"
          >
            <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />
          </div>,
          <div
            className="tagInput-comboBox tagInput-comboBox__hasTags"
          >
            <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />
          </div>,
          <div
            className="tagInput-cleanButton"
          >
            <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />
          </div>,
          <div
            className="tagInput-copyButton"
          >
            <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>
          </div>,
          <div
            className="tagInput-filterButton"
          >
            <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>
          </div>,
        ],
        "className": "tagInput-filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "availableFilters": Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            },
            "handleModalClose": [Function],
            "handleModalSubmit": [Function],
            "modalOpen": false,
            "selected": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />,
            "className": "tagInput-searchIcon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--search",
              "description": "search icon",
              "fillRule": "evenodd",
              "name": "icon--search",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />,
            "className": "tagInput-comboBox tagInput-comboBox__hasTags",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addOnBlur": false,
              "allowBackspace": true,
              "allowNew": true,
              "autofocus": true,
              "autoresize": true,
              "clearInputOnDelete": true,
              "delimiterChars": Array [],
              "delimiters": Array [
                9,
                13,
              ],
              "handleAddition": [Function],
              "handleDelete": [Function],
              "inputAttributes": Object {},
              "maxSuggestionsLength": 6,
              "minQueryLength": 1,
              "noSuggestionsText": null,
              "placeholder": "Add filter tags...",
              "suggestions": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
              "suggestionsFilter": null,
              "tagComponent": [Function],
              "tags": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />,
            "className": "tagInput-cleanButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--close--outline",
              "description": "remove all tags",
              "fillRule": "evenodd",
              "name": "icon--close--outline",
              "onClick": [Function],
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>,
            "className": "tagInput-copyButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />,
              "onCopy": undefined,
              "options": undefined,
              "text": "http://localhost/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "tagInput-button",
                "feedback": "Copied!",
                "feedbackTimeout": 2000,
                "iconDescription": "Copy to clipboard",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>,
            "className": "tagInput-filterButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />,
              "className": "tagInput-button",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "icon--filter",
                "description": "open modal for tags",
                "fillRule": "evenodd",
                "name": "icon--filter",
                "role": "img",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`TagInput component 1 renders as expected 4`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TagInput
    availableFilters={
      Object {
        "clusterLabels": Array [
          Object {
            "id": "cloud=IBM",
            "key": "cloud",
            "name": "cloud=IBM",
            "type": "clusterLabel",
            "value": "IBM",
          },
          Object {
            "id": "clusterip=9.42.23.230",
            "key": "clusterip",
            "name": "clusterip=9.42.23.230",
            "type": "clusterLabel",
            "value": "9.42.23.230",
          },
        ],
        "clusterNames": Array [
          Object {
            "id": "crucial-owl",
            "name": "cluster=crucial-owl",
            "type": "clusterName",
            "value": "crucial-owl",
          },
        ],
      }
    }
    hideModalButton={false}
    onSelectedFilterChange={[MockFunction]}
    tags={
      Array [
        Object {
          "id": "cloud=IBM",
          "key": "cloud",
          "name": "cloud=IBM",
          "type": "clusterLabel",
          "value": "IBM",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <FilterModal
          availableFilters={
            Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            }
          }
          handleModalClose={[Function]}
          handleModalSubmit={[Function]}
          modalOpen={false}
          selected={
            Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ]
          }
        />,
        <div
          className="tagInput-searchIcon"
        >
          <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />
        </div>,
        <div
          className="tagInput-comboBox tagInput-comboBox__hasTags"
        >
          <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />
        </div>,
        <div
          className="tagInput-cleanButton"
        >
          <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />
        </div>,
        <div
          className="tagInput-copyButton"
        >
          <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>
        </div>,
        <div
          className="tagInput-filterButton"
        >
          <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>
        </div>,
      ],
      "className": "tagInput-filter",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "availableFilters": Object {
            "clusterLabels": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
            ],
            "clusterNames": Array [
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
          },
          "handleModalClose": [Function],
          "handleModalSubmit": [Function],
          "modalOpen": false,
          "selected": Array [
            Object {
              "id": "cloud=IBM",
              "key": "cloud",
              "name": "cloud=IBM",
              "type": "clusterLabel",
              "value": "IBM",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--search"
            description="search icon"
            fillRule="evenodd"
            name="icon--search"
            role="img"
          />,
          "className": "tagInput-searchIcon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--search",
            "description": "search icon",
            "fillRule": "evenodd",
            "name": "icon--search",
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ReactTags
            addOnBlur={false}
            allowBackspace={true}
            allowNew={true}
            autofocus={true}
            autoresize={true}
            clearInputOnDelete={true}
            delimiterChars={Array []}
            delimiters={
              Array [
                9,
                13,
              ]
            }
            handleAddition={[Function]}
            handleDelete={[Function]}
            inputAttributes={Object {}}
            maxSuggestionsLength={6}
            minQueryLength={1}
            noSuggestionsText={null}
            placeholder="Add filter tags..."
            suggestions={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ]
            }
            suggestionsFilter={null}
            tagComponent={[Function]}
            tags={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          "className": "tagInput-comboBox tagInput-comboBox__hasTags",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "addOnBlur": false,
            "allowBackspace": true,
            "allowNew": true,
            "autofocus": true,
            "autoresize": true,
            "clearInputOnDelete": true,
            "delimiterChars": Array [],
            "delimiters": Array [
              9,
              13,
            ],
            "handleAddition": [Function],
            "handleDelete": [Function],
            "inputAttributes": Object {},
            "maxSuggestionsLength": 6,
            "minQueryLength": 1,
            "noSuggestionsText": null,
            "placeholder": "Add filter tags...",
            "suggestions": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
              Object {
                "id": "clusterip=9.42.23.230",
                "key": "clusterip",
                "name": "clusterip=9.42.23.230",
                "type": "clusterLabel",
                "value": "9.42.23.230",
              },
              Object {
                "id": "crucial-owl",
                "name": "cluster=crucial-owl",
                "type": "clusterName",
                "value": "crucial-owl",
              },
            ],
            "suggestionsFilter": null,
            "tagComponent": [Function],
            "tags": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            className="icon--close--outline"
            description="remove all tags"
            fillRule="evenodd"
            name="icon--close--outline"
            onClick={[Function]}
            role="img"
          />,
          "className": "tagInput-cleanButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "className": "icon--close--outline",
            "description": "remove all tags",
            "fillRule": "evenodd",
            "name": "icon--close--outline",
            "onClick": [Function],
            "role": "img",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <CopyToClipboard
            text="http://localhost/"
          >
            <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />
          </CopyToClipboard>,
          "className": "tagInput-copyButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <CopyButton
              className="tagInput-button"
              feedback="Copied!"
              feedbackTimeout={2000}
              iconDescription="Copy to clipboard"
              onClick={[Function]}
            />,
            "onCopy": undefined,
            "options": undefined,
            "text": "http://localhost/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "tagInput-button",
              "feedback": "Copied!",
              "feedbackTimeout": 2000,
              "iconDescription": "Copy to clipboard",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="tagInput-button"
            onClick={[Function]}
            type="button"
          >
            <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />
          </button>,
          "className": "tagInput-filterButton",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--filter"
              description="open modal for tags"
              fillRule="evenodd"
              name="icon--filter"
              role="img"
            />,
            "className": "tagInput-button",
            "onClick": [Function],
            "type": "button",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--filter",
              "description": "open modal for tags",
              "fillRule": "evenodd",
              "name": "icon--filter",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <FilterModal
            availableFilters={
              Object {
                "clusterLabels": Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                ],
                "clusterNames": Array [
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ],
              }
            }
            handleModalClose={[Function]}
            handleModalSubmit={[Function]}
            modalOpen={false}
            selected={
              Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ]
            }
          />,
          <div
            className="tagInput-searchIcon"
          >
            <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />
          </div>,
          <div
            className="tagInput-comboBox tagInput-comboBox__hasTags"
          >
            <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />
          </div>,
          <div
            className="tagInput-cleanButton"
          >
            <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />
          </div>,
          <div
            className="tagInput-copyButton"
          >
            <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>
          </div>,
          <div
            className="tagInput-filterButton"
          >
            <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>
          </div>,
        ],
        "className": "tagInput-filter",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "availableFilters": Object {
              "clusterLabels": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
              ],
              "clusterNames": Array [
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
            },
            "handleModalClose": [Function],
            "handleModalSubmit": [Function],
            "modalOpen": false,
            "selected": Array [
              Object {
                "id": "cloud=IBM",
                "key": "cloud",
                "name": "cloud=IBM",
                "type": "clusterLabel",
                "value": "IBM",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--search"
              description="search icon"
              fillRule="evenodd"
              name="icon--search"
              role="img"
            />,
            "className": "tagInput-searchIcon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--search",
              "description": "search icon",
              "fillRule": "evenodd",
              "name": "icon--search",
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ReactTags
              addOnBlur={false}
              allowBackspace={true}
              allowNew={true}
              autofocus={true}
              autoresize={true}
              clearInputOnDelete={true}
              delimiterChars={Array []}
              delimiters={
                Array [
                  9,
                  13,
                ]
              }
              handleAddition={[Function]}
              handleDelete={[Function]}
              inputAttributes={Object {}}
              maxSuggestionsLength={6}
              minQueryLength={1}
              noSuggestionsText={null}
              placeholder="Add filter tags..."
              suggestions={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                  Object {
                    "id": "clusterip=9.42.23.230",
                    "key": "clusterip",
                    "name": "clusterip=9.42.23.230",
                    "type": "clusterLabel",
                    "value": "9.42.23.230",
                  },
                  Object {
                    "id": "crucial-owl",
                    "name": "cluster=crucial-owl",
                    "type": "clusterName",
                    "value": "crucial-owl",
                  },
                ]
              }
              suggestionsFilter={null}
              tagComponent={[Function]}
              tags={
                Array [
                  Object {
                    "id": "cloud=IBM",
                    "key": "cloud",
                    "name": "cloud=IBM",
                    "type": "clusterLabel",
                    "value": "IBM",
                  },
                ]
              }
            />,
            "className": "tagInput-comboBox tagInput-comboBox__hasTags",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "addOnBlur": false,
              "allowBackspace": true,
              "allowNew": true,
              "autofocus": true,
              "autoresize": true,
              "clearInputOnDelete": true,
              "delimiterChars": Array [],
              "delimiters": Array [
                9,
                13,
              ],
              "handleAddition": [Function],
              "handleDelete": [Function],
              "inputAttributes": Object {},
              "maxSuggestionsLength": 6,
              "minQueryLength": 1,
              "noSuggestionsText": null,
              "placeholder": "Add filter tags...",
              "suggestions": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
                Object {
                  "id": "clusterip=9.42.23.230",
                  "key": "clusterip",
                  "name": "clusterip=9.42.23.230",
                  "type": "clusterLabel",
                  "value": "9.42.23.230",
                },
                Object {
                  "id": "crucial-owl",
                  "name": "cluster=crucial-owl",
                  "type": "clusterName",
                  "value": "crucial-owl",
                },
              ],
              "suggestionsFilter": null,
              "tagComponent": [Function],
              "tags": Array [
                Object {
                  "id": "cloud=IBM",
                  "key": "cloud",
                  "name": "cloud=IBM",
                  "type": "clusterLabel",
                  "value": "IBM",
                },
              ],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              className="icon--close--outline"
              description="remove all tags"
              fillRule="evenodd"
              name="icon--close--outline"
              onClick={[Function]}
              role="img"
            />,
            "className": "tagInput-cleanButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": "icon--close--outline",
              "description": "remove all tags",
              "fillRule": "evenodd",
              "name": "icon--close--outline",
              "onClick": [Function],
              "role": "img",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <CopyToClipboard
              text="http://localhost/"
            >
              <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />
            </CopyToClipboard>,
            "className": "tagInput-copyButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <CopyButton
                className="tagInput-button"
                feedback="Copied!"
                feedbackTimeout={2000}
                iconDescription="Copy to clipboard"
                onClick={[Function]}
              />,
              "onCopy": undefined,
              "options": undefined,
              "text": "http://localhost/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "tagInput-button",
                "feedback": "Copied!",
                "feedbackTimeout": 2000,
                "iconDescription": "Copy to clipboard",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="tagInput-button"
              onClick={[Function]}
              type="button"
            >
              <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />
            </button>,
            "className": "tagInput-filterButton",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Icon
                className="icon--filter"
                description="open modal for tags"
                fillRule="evenodd"
                name="icon--filter"
                role="img"
              />,
              "className": "tagInput-button",
              "onClick": [Function],
              "type": "button",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "icon--filter",
                "description": "open modal for tags",
                "fillRule": "evenodd",
                "name": "icon--filter",
                "role": "img",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
