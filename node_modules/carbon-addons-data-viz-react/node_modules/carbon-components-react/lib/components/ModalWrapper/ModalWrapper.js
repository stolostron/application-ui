"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Modal = _interopRequireDefault(require("../Modal"));

var _Button = _interopRequireDefault(require("../Button"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

var ModalWrapper =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ModalWrapper, _React$Component);

  function ModalWrapper() {
    var _ref;

    var _temp, _this;

    _classCallCheck(this, ModalWrapper);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_ref = ModalWrapper.__proto__ || Object.getPrototypeOf(ModalWrapper)).call.apply(_ref, [this].concat(args))), Object.defineProperty(_assertThisInitialized(_this), "state", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: {
        isOpen: false
      }
    }), Object.defineProperty(_assertThisInitialized(_this), "handleOpen", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function value() {
        _this.setState({
          isOpen: true
        });
      }
    }), Object.defineProperty(_assertThisInitialized(_this), "handleClose", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function value() {
        _this.setState({
          isOpen: false
        });
      }
    }), Object.defineProperty(_assertThisInitialized(_this), "handleOnRequestSubmit", {
      configurable: true,
      enumerable: true,
      writable: true,
      value: function value() {
        var _this$props = _this.props,
            handleSubmit = _this$props.handleSubmit,
            shouldCloseAfterSubmit = _this$props.shouldCloseAfterSubmit;

        if (handleSubmit()) {
          if (shouldCloseAfterSubmit) {
            _this.handleClose();
          }
        }
      }
    }), _temp));
  }

  _createClass(ModalWrapper, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          id = _props.id,
          buttonTriggerText = _props.buttonTriggerText,
          triggerButtonKind = _props.triggerButtonKind,
          modalLabel = _props.modalLabel,
          modalHeading = _props.modalHeading,
          passiveModal = _props.passiveModal,
          primaryButtonText = _props.primaryButtonText,
          secondaryButtonText = _props.secondaryButtonText,
          disabled = _props.disabled;
      var props = {
        id: id,
        modalLabel: modalLabel,
        modalHeading: modalHeading,
        passiveModal: passiveModal,
        primaryButtonText: primaryButtonText,
        secondaryButtonText: secondaryButtonText,
        open: this.state.isOpen,
        onRequestClose: this.handleClose,
        onRequestSubmit: this.handleOnRequestSubmit
      };
      return _react.default.createElement("div", {
        role: "presentation",
        onKeyDown: function onKeyDown(evt) {
          if (evt.which === 27) {
            _this2.handleClose();

            _this2.props.onKeyDown(evt);
          }
        }
      }, _react.default.createElement(_Button.default, {
        disabled: disabled,
        kind: triggerButtonKind,
        onClick: this.handleOpen
      }, buttonTriggerText), _react.default.createElement(_Modal.default, props, this.props.children));
    }
  }]);

  return ModalWrapper;
}(_react.default.Component);

exports.default = ModalWrapper;
Object.defineProperty(ModalWrapper, "propTypes", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    status: _propTypes.default.string,
    handleOpen: _propTypes.default.func,
    children: _propTypes.default.node,
    id: _propTypes.default.string,
    buttonTriggerText: _propTypes.default.string,
    modalLabel: _propTypes.default.string,
    modalHeading: _propTypes.default.string,
    modalText: _propTypes.default.string,
    passiveModal: _propTypes.default.bool,
    withHeader: _propTypes.default.bool,
    modalBeforeContent: _propTypes.default.bool,
    primaryButtonText: _propTypes.default.string,
    secondaryButtonText: _propTypes.default.string,
    handleSubmit: _propTypes.default.func,
    disabled: _propTypes.default.bool,
    triggerButtonKind: _propTypes.default.oneOf(['primary', 'secondary', 'danger', 'ghost']),
    shouldCloseAfterSubmit: _propTypes.default.bool
  }
});
Object.defineProperty(ModalWrapper, "defaultProps", {
  configurable: true,
  enumerable: true,
  writable: true,
  value: {
    primaryButtonText: 'Save',
    secondaryButtonText: 'Cancel',
    triggerButtonKind: 'primary',
    disabled: false
  }
});