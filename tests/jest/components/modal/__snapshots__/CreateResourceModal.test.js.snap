// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateResourceModal test renders as expected 1 1`] = `undefined`;

exports[`CreateResourceModal test renders as expected 1 2`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(CreateResourceModal)
      data={
        Object {
          "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
          "clusterName": "",
          "kind": "",
          "name": "guestbook-app",
          "namespace": "default",
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      sampleContent={
        Array [
          "aaaaa",
        ]
      }
      store={
        Object {
          "dirty": true,
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <CreateResourceModal
        data={
          Object {
            "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
            "clusterName": "",
            "kind": "",
            "name": "guestbook-app",
            "namespace": "default",
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
          }
        }
        deleteSuccessFinished={[Function]}
        handleClose={[MockFunction]}
        handleSubmit={[MockFunction]}
        label={
          Object {
            "heading": "modal.remove-hcmapplication.heading",
            "label": "modal.remove-hcmapplication.label",
            "primaryBtn": "modal.remove-hcmapplication.heading",
          }
        }
        locale="en"
        mutateSuccessFinished={[Function]}
        onCreateResource={[Function]}
        open={true}
        resourceType={
          Object {
            "list": "HCMApplicationList",
            "name": "HCMApplication",
          }
        }
        sampleContent={
          Array [
            "aaaaa",
          ]
        }
        store={
          Object {
            "dirty": true,
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dirty": true,
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <div>
          <Button
            disabled={false}
            icon="add--glyph"
            iconDescription="Provide icon description if icon is used"
            key="create-resource"
            kind="primary"
            onClick={[Function]}
            small={true}
            tabIndex={0}
            type="button"
          >
            <button
              className="bx--btn bx--btn--sm bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              <Icon
                className="bx--btn__icon"
                description="Provide icon description if icon is used"
                fillRule="evenodd"
                name="add--glyph"
                role="img"
              >
                <svg
                  alt="Provide icon description if icon is used"
                  aria-label="Provide icon description if icon is used"
                  className="bx--btn__icon"
                  fillRule="evenodd"
                  height="16"
                  name="add--glyph"
                  role="img"
                  viewBox="0 0 16 16"
                  width="16"
                >
                  <title>
                    Provide icon description if icon is used
                  </title>
                  <path
                    d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm4 9H9v3H7V9H4V7h3V4h2v3h3v2z"
                    key="key0"
                  />
                </svg>
              </Icon>
            </button>
          </Button>
        </div>
      </CreateResourceModal>
    </Connect(CreateResourceModal)>
  </Router>
</BrowserRouter>
`;

exports[`CreateResourceModal test renders as expected 1 3`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(CreateResourceModal)
      data={
        Object {
          "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
          "clusterName": "",
          "kind": "",
          "name": "guestbook-app",
          "namespace": "default",
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      sampleContent={
        Array [
          "aaaaa",
        ]
      }
      store={
        Object {
          "dirty": true,
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <CreateResourceModal
        data={
          Object {
            "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
            "clusterName": "",
            "kind": "",
            "name": "guestbook-app",
            "namespace": "default",
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
          }
        }
        deleteSuccessFinished={[Function]}
        handleClose={[MockFunction]}
        handleSubmit={[MockFunction]}
        label={
          Object {
            "heading": "modal.remove-hcmapplication.heading",
            "label": "modal.remove-hcmapplication.label",
            "primaryBtn": "modal.remove-hcmapplication.heading",
          }
        }
        locale="en"
        mutateSuccessFinished={[Function]}
        onCreateResource={[Function]}
        open={true}
        resourceType={
          Object {
            "list": "HCMApplicationList",
            "name": "HCMApplication",
          }
        }
        sampleContent={
          Array [
            "aaaaa",
          ]
        }
        store={
          Object {
            "dirty": true,
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dirty": true,
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <div>
          <Button
            disabled={false}
            icon="add--glyph"
            iconDescription="Provide icon description if icon is used"
            key="create-resource"
            kind="primary"
            onClick={[Function]}
            small={true}
            tabIndex={0}
            type="button"
          >
            <button
              className="bx--btn bx--btn--sm bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              <Icon
                className="bx--btn__icon"
                description="Provide icon description if icon is used"
                fillRule="evenodd"
                name="add--glyph"
                role="img"
              >
                <svg
                  alt="Provide icon description if icon is used"
                  aria-label="Provide icon description if icon is used"
                  className="bx--btn__icon"
                  fillRule="evenodd"
                  height="16"
                  name="add--glyph"
                  role="img"
                  viewBox="0 0 16 16"
                  width="16"
                >
                  <title>
                    Provide icon description if icon is used
                  </title>
                  <path
                    d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm4 9H9v3H7V9H4V7h3V4h2v3h3v2z"
                    key="key0"
                  />
                </svg>
              </Icon>
            </button>
          </Button>
        </div>
      </CreateResourceModal>
    </Connect(CreateResourceModal)>
  </Router>
</BrowserRouter>
`;

exports[`CreateResourceModal test renders as expected with error 1`] = `undefined`;

exports[`CreateResourceModal test renders as expected with error 2`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(CreateResourceModal)
      data={
        Object {
          "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
          "clusterName": "",
          "kind": "",
          "name": "guestbook-app",
          "namespace": "default",
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      sampleContent={
        Array [
          "aaaaa",
        ]
      }
      store={
        Object {
          "dirty": true,
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <CreateResourceModal
        data={
          Object {
            "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
            "clusterName": "",
            "kind": "",
            "name": "guestbook-app",
            "namespace": "default",
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
          }
        }
        deleteSuccessFinished={[Function]}
        handleClose={[MockFunction]}
        handleSubmit={[MockFunction]}
        label={
          Object {
            "heading": "modal.remove-hcmapplication.heading",
            "label": "modal.remove-hcmapplication.label",
            "primaryBtn": "modal.remove-hcmapplication.heading",
          }
        }
        locale="en"
        mutateSuccessFinished={[Function]}
        onCreateResource={[Function]}
        open={true}
        resourceType={
          Object {
            "list": "HCMApplicationList",
            "name": "HCMApplication",
          }
        }
        sampleContent={
          Array [
            "aaaaa",
          ]
        }
        store={
          Object {
            "dirty": true,
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dirty": true,
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <div>
          <Button
            disabled={false}
            icon="add--glyph"
            iconDescription="Provide icon description if icon is used"
            key="create-resource"
            kind="primary"
            onClick={[Function]}
            small={true}
            tabIndex={0}
            type="button"
          >
            <button
              className="bx--btn bx--btn--sm bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              <Icon
                className="bx--btn__icon"
                description="Provide icon description if icon is used"
                fillRule="evenodd"
                name="add--glyph"
                role="img"
              >
                <svg
                  alt="Provide icon description if icon is used"
                  aria-label="Provide icon description if icon is used"
                  className="bx--btn__icon"
                  fillRule="evenodd"
                  height="16"
                  name="add--glyph"
                  role="img"
                  viewBox="0 0 16 16"
                  width="16"
                >
                  <title>
                    Provide icon description if icon is used
                  </title>
                  <path
                    d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm4 9H9v3H7V9H4V7h3V4h2v3h3v2z"
                    key="key0"
                  />
                </svg>
              </Icon>
            </button>
          </Button>
        </div>
      </CreateResourceModal>
    </Connect(CreateResourceModal)>
  </Router>
</BrowserRouter>
`;

exports[`CreateResourceModal test renders as expected with error 3`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Connect(CreateResourceModal)
      data={
        Object {
          "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
          "clusterName": "",
          "kind": "",
          "name": "guestbook-app",
          "namespace": "default",
          "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
        }
      }
      handleClose={[MockFunction]}
      handleSubmit={[MockFunction]}
      label={
        Object {
          "heading": "modal.remove-hcmapplication.heading",
          "label": "modal.remove-hcmapplication.label",
          "primaryBtn": "modal.remove-hcmapplication.heading",
        }
      }
      locale="en"
      open={true}
      resourceType={
        Object {
          "list": "HCMApplicationList",
          "name": "HCMApplication",
        }
      }
      sampleContent={
        Array [
          "aaaaa",
        ]
      }
      store={
        Object {
          "dirty": true,
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <CreateResourceModal
        data={
          Object {
            "_uid": "0221dae9-b6b9-40cb-8cba-473011a750e0",
            "clusterName": "",
            "kind": "",
            "name": "guestbook-app",
            "namespace": "default",
            "selfLink": "/apis/app.k8s.io/v1beta1/namespaces/default/applications/guestbook-app",
          }
        }
        deleteSuccessFinished={[Function]}
        handleClose={[MockFunction]}
        handleSubmit={[MockFunction]}
        label={
          Object {
            "heading": "modal.remove-hcmapplication.heading",
            "label": "modal.remove-hcmapplication.label",
            "primaryBtn": "modal.remove-hcmapplication.heading",
          }
        }
        locale="en"
        mutateSuccessFinished={[Function]}
        onCreateResource={[Function]}
        open={true}
        resourceType={
          Object {
            "list": "HCMApplicationList",
            "name": "HCMApplication",
          }
        }
        sampleContent={
          Array [
            "aaaaa",
          ]
        }
        store={
          Object {
            "dirty": true,
            "dispatch": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
            Symbol(observable): [Function],
          }
        }
        storeSubscription={
          Subscription {
            "listeners": Object {
              "clear": [Function],
              "get": [Function],
              "notify": [Function],
              "subscribe": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "dirty": true,
              "dispatch": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
              Symbol(observable): [Function],
            },
            "unsubscribe": [Function],
          }
        }
      >
        <div>
          <Button
            disabled={false}
            icon="add--glyph"
            iconDescription="Provide icon description if icon is used"
            key="create-resource"
            kind="primary"
            onClick={[Function]}
            small={true}
            tabIndex={0}
            type="button"
          >
            <button
              className="bx--btn bx--btn--sm bx--btn--primary"
              disabled={false}
              onClick={[Function]}
              tabIndex={0}
              type="button"
            >
              <Icon
                className="bx--btn__icon"
                description="Provide icon description if icon is used"
                fillRule="evenodd"
                name="add--glyph"
                role="img"
              >
                <svg
                  alt="Provide icon description if icon is used"
                  aria-label="Provide icon description if icon is used"
                  className="bx--btn__icon"
                  fillRule="evenodd"
                  height="16"
                  name="add--glyph"
                  role="img"
                  viewBox="0 0 16 16"
                  width="16"
                >
                  <title>
                    Provide icon description if icon is used
                  </title>
                  <path
                    d="M8 0C3.6 0 0 3.6 0 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8zm4 9H9v3H7V9H4V7h3V4h2v3h3v2z"
                    key="key0"
                  />
                </svg>
              </Icon>
            </button>
          </Button>
        </div>
      </CreateResourceModal>
    </Connect(CreateResourceModal)>
  </Router>
</BrowserRouter>
`;
